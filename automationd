#!/usr/bin/env php
<?php declare(strict_types=1);

require './vendor/autoload.php';

use Automation\Framework\Application;
use Automation\Framework\Facades\Slack;
use Automation\Framework\Queue\Queueable;

Application::instance()->run();

app()->instantiateJobs();

$slack = app('slack')->channel('debug');

// $slack->send(sprintf('Automation daemon has started at %s!', date('H:i')));

$jobs = app()->getInstancesOf(Queueable::class);

return;

try {
    while (false) {
        foreach ($jobs as $job) {
            $reflector = app(ReflectionObject::class, [$job]);
    
            $job_name = $reflector->getShortName();
    
            dump(sprintf('Executing "%s" job ...', $job_name));
    
            $result = app([$job, 'execute']);
    
            if (!$result) {
                Slack::send(sprintf('Job "%s" failed!', $job_name));
    
                continue;
            }
    
            dump(sprintf('Executed "%s" job successfully!', $job_name));
        }
    
        sleep((int) app('sleep_for'));
    }
} catch (Throwable $e) {
    Slack::send(sprintf('Automation dameon got an exception at %s', date('H:i')));

    throw $e;
}
