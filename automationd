#!/usr/bin/env php
<?php declare(strict_types=1, ticks=1);

require __DIR__.'/vendor/autoload.php';

use Automation\Framework\Application;
use Automation\Framework\Facades\{Slack, Console};
use Automation\Framework\Interfaces\JobInterface;
use GuzzleHttp\Exception\ConnectException;

Application::instance()->run();

app()->instantiateJobs();
app('slack')->channel('debug');

$jobs = app()->getInstancesOf(JobInterface::class);

try {
    Slack::send(sprintf('Automation daemon has started at %s!', date('H:i')));

    while (true) {
        foreach ($jobs as $job) {
            $reflector = app(ReflectionObject::class, [$job]);
    
            $job_name = $reflector->getShortName();
    
            dump(sprintf('Executing "%s" job ...', $job_name));
    
            $result = app([$job, 'execute']);
    
            if (!$result) {
                Slack::send(sprintf('Job "%s" failed!', $job_name));
    
                continue;
            }
    
            dump(sprintf('Executed "%s" job successfully!', $job_name));
        }
    
        sleep((int) app('sleep_for'));
    }
} catch (Throwable $e) {
    if ($e instanceof ConnectException) {
        Console::signal(SIGTERM);
    }

    Slack::send(sprintf('Automation dameon got an exception at %s', date('H:i')));

    throw $e;
}
