{
   "operationname":"DirectoryQuery",
   "variables":{
      "where":{
         "_and":[
            {
               "_or":[
                  {
                     "offers_bounties":{
                        "_eq":true
                     }
                  },
                  {
                     "external_program":{
                        "offers_rewards":{
                           "_eq":true
                        }
                     }
                  }
               ]
            },
            {
               "_or":[
                  {
                     "submission_state":{
                        "_eq":"open"
                     }
                  },
                  {
                     "submission_state":{
                        "_eq":"api_only"
                     }
                  },
                  {
                     "external_program":{
                        
                     }
                  }
               ]
            },
            {
               "_not":{
                  "external_program":{
                     
                  }
               }
            },
            {
               "_or":[
                  {
                     "_and":[
                        {
                           "state":{
                              "_neq":"sandboxed"
                           }
                        },
                        {
                           "state":{
                              "_neq":"soft_launched"
                           }
                        }
                     ]
                  },
                  {
                     "external_program":{
                        
                     }
                  }
               ]
            }
         ]
      },
      "first":25,
      "secureOrderBy":{
         "launched_at":{
            "_direction":"DESC"
         }
      }
   },
   "query":"query DirectoryQuery($cursor: String, $secureOrderBy: FiltersTeamFilterOrder, $where: FiltersTeamFilterInput) {\n  me {\n    id\n    edit_unclaimed_profiles\n    h1_pentester\n    __typename\n  }\n  teams(first: 25, after: $cursor, secure_order_by: $secureOrderBy, where: $where) {\n    pageInfo {\n      endCursor\n      hasNextPage\n      __typename\n    }\n    edges {\n      node {\n        id\n        bookmarked\n        ...TeamTableResolvedReports\n        ...TeamTableAvatarAndTitle\n        ...TeamTableLaunchDate\n        ...TeamTableMinimumBounty\n        ...TeamTableAverageBounty\n        ...BookmarkTeam\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment TeamTableResolvedReports on Team {\n  id\n  resolved_report_count\n  __typename\n}\n\nfragment TeamTableAvatarAndTitle on Team {\n  id\n  profile_picture(size: medium)\n  name\n  handle\n  submission_state\n  triage_active\n  publicly_visible_retesting\n  state\n  allows_bounty_splitting\n  external_program {\n    id\n    __typename\n  }\n  ...TeamLinkWithMiniProfile\n  __typename\n}\n\nfragment TeamLinkWithMiniProfile on Team {\n  id\n  handle\n  name\n  __typename\n}\n\nfragment TeamTableLaunchDate on Team {\n  id\n  launched_at\n  __typename\n}\n\nfragment TeamTableMinimumBounty on Team {\n  id\n  currency\n  base_bounty\n  __typename\n}\n\nfragment TeamTableAverageBounty on Team {\n  id\n  currency\n  average_bounty_lower_amount\n  average_bounty_upper_amount\n  __typename\n}\n\nfragment BookmarkTeam on Team {\n  id\n  bookmarked\n  __typename\n}\n"
}